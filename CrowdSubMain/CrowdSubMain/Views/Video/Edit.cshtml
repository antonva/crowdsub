@model CrowdSubMain.Models.video

@{
    ViewBag.Title = "Edit Video Profile";
}


<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("Edit", "Video", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Please replace fields with the information you want to change and press save.</h4>
                @Html.ValidationSummary(true)
                <div class="form-group">
                    @Html.LabelFor(m => m.video_title, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.video_title, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.video_title)
                    </div>
                </div>
    
                <div class="form-group">
                    @Html.LabelFor(m => m.video_description, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(m => m.video_description, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.video_description)
                    </div>
                </div>
    
                <div class="form-group">
                    @Html.LabelFor(m => m.video_year_published, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.video_year_published, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.video_year_published)
                    </div>
                </div>
    
                <div class="form-group">
                    @Html.LabelFor(m => m.poster_link, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.poster_link, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.poster_link)
                    </div>
                </div>
    
                @*<div class="form-group">
                    @Html.LabelFor(m => m.video_type, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                            @Html.DropDownListFor(model => model.video_type, ViewBag.items as List<SelectListItem>)
                            @Html.ValidationMessageFor(model => model.video_type)
                    </div>
                </div>*@
    
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>    
            }
        </section>
    </div>
</div>

@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>video</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.video_title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.video_title)
                @Html.ValidationMessageFor(model => model.video_title)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.video_type, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.video_type)
                @Html.ValidationMessageFor(model => model.video_type)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.video_year_published, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.video_year_published)
                @Html.ValidationMessageFor(model => model.video_year_published)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.video_description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.video_description)
                @Html.ValidationMessageFor(model => model.video_description)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.poster_link, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.poster_link, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.poster_link)
            </div>
        </div>

        
    </div>
}*@


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
